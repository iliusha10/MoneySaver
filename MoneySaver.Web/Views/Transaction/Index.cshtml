@model IEnumerable<MoneySaver.Models.TransactionListModel>

@{
    ViewBag.Title = "Transactions";
    var modell = Model.GroupBy(x => x.CreateDate.Date);
}


<h2>Transactions</h2>
@*@Html.Action("TransactionDisplay", "Wallet")*@

<div>
    <img id="plusSign" width="80" height="80" src="~/Images/plus-icon.png" style=" position: fixed; bottom: 100px; right: 70px;" />
</div>

<table class="table">

    @foreach (var date in modell)
    {
        <tr>
            <td class="col-md-2" style=" font-family 'Times New Roman' , times, serif;">
                <div class="col-md-1">
                    <span style="font-size: 65px;vertical-align:top"> @Html.DisplayFor(modelItem => date.Key.Day)</span>
                </div>
                <div class="col-md-1">
                    <span style="vertical-align:sub;">@Html.DisplayFor(modelItem => date.Key.DayOfWeek)</span>
                    <span style="text-align: right; display: block;">@Html.DisplayFor(modelItem => date.Key.Month)</span>
                    <span>@Html.DisplayFor(modelItem => date.Key.Year)</span>

                </div>
            </td>
            <td>
                @{double spent = 0;
                double income = 0;

                foreach (var item in date)
                {
                    if (item.CategoryTypeName == "Expence")
                    {
                        spent += item.Value;
                    }
                    else
                    {
                        income += item.Value;
                    }
                }
                }
                @Html.DisplayFor(modelItem => income)/
                @Html.DisplayFor(modelItem => spent)


            </td>
        </tr>
        <tr>
            <td class="col-md-7">
                @foreach (var item in date)
                {
                    <table class="table-hover">
                        <tr class="TableRow" data-id=@item.TransactionID>
                            @Html.HiddenFor(modelItem => item.TransactionID)
                            <td class="col-md-1">
                                @{
                    if (item.CategoryTypeName == "Income")
                    {

                        <img src="~/Images/IncomeWallet.png" width="50" height="50" />
                    }
                    else
                    {

                        <img src="~/Images/ExpenceWallet.png" width="50" height="50" />
                    }
                                }
                            </td>
                            <td class="col-md-4">
                                @{if (item.CategoryTypeName == "Income")
                                {
                                    <span style="color:blue;display: block;">@Html.DisplayFor(modelItem => item.CategoryTypeName)</span>
                                }
                                if (item.CategoryTypeName == "Expence")
                                {
                                    <span style="color:red;display: block;">@Html.DisplayFor(modelItem => item.CategoryTypeName)</span>
                                }
                                }
                                <span class"control-label col-md-6">@Html.DisplayFor(modelItem => item.WalletName)</span>
                            </td>
                            <td class="col-md-4">
                                <span style="display: block;">@Html.DisplayFor(modelItem => item.CategoryNameConcat)</span>
                                <span style="display: block;">@Html.DisplayFor(modelItem => item.Comment)</span>
                            </td>
                            <td class="col-md-1">
                                <span style="font-weight: bold;">@Html.DisplayFor(modelItem => item.Value)</span>
                            </td>
                        </tr>
                    </table>
                }
            </td>
        </tr>

    }

</table>
<div id="DetailsDialog" title="Transaction Details">
    @*<p>appear now</p>*@
</div>
<div id="CreateDialog" title="New Transaction">
    @*<p>appear now</p>*@
</div>

@section Scripts {

    <script type="text/javascript">
        $(document)
            .ready(function () {
                $(".TableRow").click(function () {
                    var tranId = $(this).data("id");

                    $.ajax({
                        url: '@Url.Action("Details", "Transaction")' + '/' + tranId,
                        success: function (data) {
                            $("#DetailsDialog").html(data).dialog({
                                width: 600
                            });

                            $("#DeleteIcon").click(function () {
                                DeleteTransaction(tranId);
                            });

                            $("#EditIcon").click(function () {
                                EditTransaction(tranId);
                            });
                        }
                    });

                });

                $("#plusSign").click(function () {
                    $.ajax({
                        url: '@Url.Action("Create", "Transaction")',
                        success: function (data) {
                            $("#CreateDialog").html(data).dialog({
                                width: 600,
                                buttons: [{
                                    text: "Save",
                                    click: function () {
                                        var $form = $("#form");
                                        var data = getFormData($form);
                                        console.log(data);
                                        $.ajax({
                                            type: 'POST',
                                            url: '@Url.Action("Create", "Transaction")',
                                            data: data,
                                            dataType: "json",
                                            success: function (resultData) { UIResponce("Save Complete") }
                                            //error:
                                        });
                                        $(this).dialog("close");
                                        location.reload();
                                    }
                                }
                                ]
                            });

                            $("#datepicker").datepicker({
                                buttonImage: '../Images/calendar-resize.png',
                                buttonImageOnly: true,
                                changeMonth: true,
                                changeYear: true,
                                showOn: 'both',
                                dateFormat: 'yy/mm/dd',
                                onSelect: function (date) {
                                    $("#CreateDate").val(date);
                                    $("#CreateDate").formatDateTime
                                }
                            });

                            @*var idd = $("#SelectedCategoryType").val();
                            getCategories(idd);

                            $("#SelectedCategoryType").change(function () {
                                var catid = $(this).val(); // Use $(this) so you don't traverse the DOM again
                                getCategories(catid);
                            });*@

                            var suCatUrl = '@Url.Action("GetSubcategories", "Transaction")';
                            var subcategories = $('#SelectedSubCategory');
                            $("#SelectedCategory").change(function () {
                                var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
                                $.getJSON(suCatUrl, { category: id }, function (response) {
                                    setDefaultSubCategory();
                                    $.each(response, function (index, key) {
                                        subcategories.append($("<option></option>").attr("value", key.ID).text(key.Text))
                                    });
                                });
                            });

                            @*var walletUrl = '@Url.Action("GetWallets", "Transaction")';
                            var wallets = $('#SelectedWallet');
                            $("#SelectedWallet").click(function () {
                                $.getJSON(walletUrl, function (response) {
                                    wallets.empty(); // remove any existing options
                                    $.each(response, function (index, key) {
                                        wallets.append($("<option></option>").attr("value", key.ID).text(key.Text))
                                    });
                                });
                            });*@

                            $("#tabs").tabs({
                                active: 1,
                                create: function (event, ui) {
                                    getCategories(2);
                                    getWallets();
                                },
                                activate: function (event, ui) {
                                    var idd = ui.newTab.index() + 1;
                                    getCategories(idd);
                                    setDefaultSubCategory();
                                },
                                beforeLoad: function (event, ui) {
                                    ui.jqXHR.error(function () {
                                        ui.panel.html("Couldn't load this tab. We'll try to fix this as soon as possible. ");
                                    });
                                }
                            });
                        }
                    });
                });

            });

        function getFormData($form) {
            var unindexed_array = $form.serializeArray();
            var indexed_array = {};

            $.map(unindexed_array, function (n, i) {
                indexed_array[n['name']] = n['value'];
            });

            return indexed_array;
        }

        function setDefaultSubCategory() {
            var subcategories = $('#SelectedSubCategory');
            subcategories.empty();
            subcategories.append($("<option></option>")
            .attr("value", '').text('Please Select'));
        }

        function getWallets() {
            var walletUrl = '@Url.Action("GetWallets", "Transaction")';
            var wallets = $('#SelectedWallet');
            $.getJSON(walletUrl, function (response) {
                wallets.empty(); // remove any existing options
                $.each(response, function (index, key) {
                    wallets.append($("<option></option>").attr("value", key.ID).text(key.Text))
                });
            });
        }

        function getCategories(id) {
            var catUrl = '@Url.Action("GetCategories", "Transaction")';
            var categories = $('#SelectedCategory');
            $.getJSON(catUrl, { type: id }, function (response) {
                categories.empty(); // remove any existing options
                categories.append($("<option></option>")
         .attr("value", '').text('Please Select'));
                $.each(response, function (index, key) {
                    categories.append($("<option></option>").attr("value", key.ID).text(key.Text))
                });
            });
        };

        function DeleteTransaction(tranId) {
            var url = '@Url.Action("Delete", "Transaction")' + '/' + tranId;
            $.ajax({
                url: url,
                type: 'POST',
                success: function (result) {
                    UIResponce("Transaction Deleted Successfully");
                },
                //error: function (jqXHR, textStatus, errorThrown) { someErrorFunction(); }
                error: function (jqXHR) { UIResponce(jqXHR); }
            });
        };

        function EditTransaction(tranId) {
            var url = '@Url.Action("Edit", "Transaction")' + '/' + tranId;
            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) {
                    $("#DetailsDialog").html(result).dialog({
                        width: 600
                    });
                    getWallets();
                },
                //error: function (jqXHR) { UIResponce(jqXHR); }
            });
        };

        function UIResponce(Text) {
            $("#DetailsDialog").html(Text).dialog({
                width: 600
            });
            setTimeout(function () {// wait for 5 secs(2)
                location.reload(); // then reload the page.(3)
            }, 2000);
        }
    </script>
}
